const express = require('express');
const router = express.Router();
const authController = require('../controllers/authcontrollers'); // attention au nom du fichier (c minuscule)
const articleController = require('../controllers/articleController');
const protect = require('../middleware/authMiddleware');

// Routes publiques
router.post('/register', authController.registerUser);
router.post('/login', authController.loginUser);

// Routes prot√©g√©es
router.put('/profile', protect, authController.updateUserProfile);  // modifier profil
router.get('/profile', protect, authController.getUserProfile);     // r√©cup√©rer profil
router.get('/all-profiles', protect, authController.getAllUsers);  // üëà nouvelle route

// Routes prot√©g√©es
router.get('/articles', protect, articleController.getUserArticles); // r√©cup√©rer articles de l'utilisateur connect√©
router.post('/articles', protect, articleController.createArticle); // cr√©er un nouvel article
router.put('/articles/:id', protect, articleController.updateArticle); // mettre √† jour un article
router.delete('/articles/:id', protect, articleController.deleteArticle); // supprimer un article

// D√©connexion (symbolique, c√¥t√© client on supprime le token)
router.post('/logout', protect, authController.logoutUser);

module.exports = router;
